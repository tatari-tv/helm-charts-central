{{- range $key, $value := $.Values.stores}}
apiVersion: "external-secrets.io/v1beta1"
kind: "SecretStore"
metadata:
  name: {{$key | quote}}
  namespace: {{$.Values.namespace | quote}}
  labels:
    {{- include "secretstores.labels" $ | nindent 4 }}
  {{- with $.Values.annotations}}
  annotations:
    {{- toYaml . | nindent 4}}
  {{- end}}
spec:
  # Provider field contains the configuration to access the provider which
  # contains the secret.
  # Exactly one provider must be configured.
  provider:
    {{- if eq $value.type "aws"}}
    # AWS Secrets Manager
    # AWS configures this store to sync secrets using AWS Secret Manager provider
    aws:
      service: "SecretsManager"
      # Role is a Role ARN which the SecretManager provider will assume
      role: {{$value.iamRole | quote}}
      # AWS Region to be used for the provider
      region: {{$value.region | quote}}
    {{- else if eq $value.type "vault"}}
    # Vault - {{$value.path}}/
    # Sync secrets with the {{$value.path}}/ mount in Vault
    vault:
      server: {{$value.server | quote}}
      # Path is the mount path of the Vault KV backend endpoint
      path: {{$value.path | quote}}
      auth:
        # Kubernetes auth: https://www.vaultproject.io/docs/auth/kubernetes
        kubernetes:
          mountPath: "kubernetes"
          role: {{$.Values.serviceName | quote}}
          serviceAccountRef:
            name: {{$.Values.serviceName | quote}}
    {{- end }}
---
{{- end }}
